<refentry id="file">
   <refmeta> 
      <refentrytitle>file</refentrytitle>
   </refmeta>

   <refnamediv>
      <refname>file</refname>
      <refpurpose>Implement virtual file system commands</refpurpose>
   </refnamediv>

   <refsynopsisdiv>
      <cmdsynopsis>
         <command>file</command>
         <arg><replaceable>subcommand</replaceable></arg>
         <arg rep="repeat" choice="opt"><replaceable>-option
               </replaceable><replaceable>value</replaceable></arg>
      </cmdsynopsis>
   </refsynopsisdiv>

   <refsect1><title>Description</title>
   <para>
   The file command implements Gnome virtual file system commands.
   </para>
   </refsect1>

   <refsect1><title>Subcommands</title>
      <variablelist>
         <varlistentry>
            <term><cmdsynopsis>
               <command>file</command>
               <arg choice="plain">create</arg>
               <arg>file-name</arg>
               <arg rep="repeat" choice="opt"><replaceable>-option
                     </replaceable> <replaceable>value</replaceable></arg>
               </cmdsynopsis></term>
            <listitem>
               <para>
                  Create a new file. This command returns the name of a newly
                  created command, which can be used to invoke various
                  operations on the new file. See <command>file open</command>.
               </para>
               <variablelist><title>Options</title>
               <varlistentry>
                  <term>-random</term>
                  <listitem>
                     <para>type: <type>bool</type>(Default false)</para>
                     <para>Whether random access can be used.</para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>-permission</term>
                  <listitem>
                     <para>type: <type>integer</type>(Default 0755)</para>
                     <para>Permission of the file</para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>-force</term>
                  <listitem>
                     <para>type: <type>bool</type>(Default false)</para>
                     <para>Whether an existing file with the same name is
                     overwritten.</para>
                  </listitem>
               </varlistentry>
               </variablelist>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term><cmdsynopsis>
               <command>file</command>
               <arg choice="plain">exists</arg>
               <arg>file-name</arg>
               </cmdsynopsis></term>
            <listitem>
               <para>
                  Returns a boolean whether file file-name exist.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>
               <cmdsynopsis>
                  <command>file</command>
                  <arg choice="plain">info</arg>
                  <arg>file-name</arg>
                  <arg ><replaceable>-option</replaceable></arg>
               </cmdsynopsis>
               <cmdsynopsis>
                  <command>file</command>
                  <arg choice="plain">info</arg>
                  <arg>file-name</arg>
                  <arg rep="repeat" choice="opt"><replaceable>-option
                        </replaceable> <replaceable>value</replaceable></arg>
               </cmdsynopsis>
               </term>
            <listitem>
               <para>
                  In its first form, an information about a file is 
                  returned. The option specifies, which information to return.
               </para>
               <para>
                  In its second form the values of each option
                  must be the name of a global variable in which the
                  corresponding information is stored. In this case the 
                  empty string is returned.
               </para>
               <para>
               Example
               <programlisting>
puts [gnocl::file info "file:///tmp/qqq.tcl" -mimeType]
gnocl::file info "file:///tmp/qqq.tcl" -isSymlink isSymlink -size fileSize -fileType type
               </programlisting>
               </para>
               <variablelist><title>Options</title>
               <varlistentry>
                  <term>-fileType</term>
                  <listitem>
                     <para>type: <type>string</type></para>
                     <para></para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>-isLocal</term>
                  <listitem>
                     <para>type: <type>string</type></para>
                     <para></para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>-isSymlink</term>
                  <listitem>
                     <para>type: <type>string</type></para>
                     <para></para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>-mimeType</term>
                  <listitem>
                     <para>type: <type>string</type></para>
                     <para></para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>-name</term>
                  <listitem>
                     <para>type: <type>string</type></para>
                     <para></para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>-size</term>
                  <listitem>
                     <para>type: <type>string</type></para>
                     <para></para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>-symlinkName</term>
                  <listitem>
                     <para>type: <type>string</type></para>
                     <para></para>
                  </listitem>
               </varlistentry>
               </variablelist>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term><cmdsynopsis>
               <command>file</command>
               <arg choice="plain">listDir</arg>
               <arg>dir-name</arg>
               </cmdsynopsis></term>
            <listitem>
               <para>
                  Returns a list of files in a directory. 
               </para>
               <para>
               Example which lists all files starting with q, r, s or t
               in the home directory of the current user.
               <programlisting>
proc printFileInfo { name size } {
   puts "$name: $size"
}
gnocl::file listDir "~" -matchName {^[q-t].*} -onMatch "printFileInfo %n %s"]
               </programlisting>
               </para>
               <variablelist><title>Options</title>
               <varlistentry>
                  <term>-matchName</term>
                  <listitem>
                     <para>type: <type>string</type></para>
                     <para>List only those files matching the given regular
                     expression</para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>-onMatch</term>
                  <listitem>
                     <para>type: <type>string</type></para>
                     <para>Do not return a list of files, but execute the given
                     Tcl command for each file.
                     Before evaluation the following percent strings are 
                     substituted:
                     TABLE
                     %% | %
                     %n | name
                     %t | type
                     %l | boolean whether file is local
                     %k | boolean whether file is symlink
                     %K | symlink name
                     %m | MIME type
                     %s | file size
                     TABLE
                     </para>
                  </listitem>
               </varlistentry>
               </variablelist>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term><cmdsynopsis>
               <command>file</command>
               <arg choice="plain">open</arg>
               <arg>file-name</arg>
               <arg rep="repeat" choice="opt"><replaceable>-option
                     </replaceable> <replaceable>value</replaceable></arg>
               </cmdsynopsis></term>
            <listitem>
               <para>
                  This command opens a file and returns the name of a
                  newly created command, which can be used to invoke various
                  operations listed below on the file. 
               </para>
               <variablelist><title>Options</title>
                  <varlistentry>
                     <term>-random</term>
                     <listitem>
                        <para>type: <type>bool</type>(Default false)</para>
                        <para>Whether random access can be used.</para>
                     </listitem>
                  </varlistentry>
                  <varlistentry>
                     <term>-mode</term>
                     <listitem>
                        <para>type: <type>one of read, r, write, w, readWrite,
                        rw</type>(Default read)</para>
                        <para>Open mode.</para>
                     </listitem>
                  </varlistentry>
               </variablelist>
               <variablelist><title>File operations</title>
               <varlistentry>
                  <term>read num-bytes var</term>
                  <listitem>
                     <para>Read num-bytes bytes in the variable
                     var. Returns the number of bytes read or -1
                     if EOF is encountered.</para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>write string</term>
                  <listitem>
                     <para>Write string.</para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term><cmdsynopsis>
                  <arg choice="plain">seek position</arg>
                  <arg choice="opt"><replaceable>-origin
                        </replaceable> <replaceable>org
                        </replaceable></arg>
                  </cmdsynopsis></term>
                  <listitem>
                     <para>Set the file position indicator to position
                           position. org must be one of start, current
                           or end.</para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>tell</term>
                  <listitem>
                     <para>Return current position of the file position
                        indicator</para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>close</term>
                  <listitem>
                     <para>Close the file. The command associated
                     with this file becomes invalid.</para>
                  </listitem>
               </varlistentry>
               </variablelist>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term><cmdsynopsis>
               <command>file</command>
               <arg choice="plain">makeDir</arg>
               <arg>dir-name</arg>
               </cmdsynopsis></term>
            <listitem>
               <para>
                  Make a directory. 
               </para>
               <variablelist><title>Options</title>
               <varlistentry>
                  <term>-permission</term>
                  <listitem>
                     <para>type: <type>integer</type>(Default 0755)</para>
                     <para></para>
                  </listitem>
               </varlistentry>
               </variablelist>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term><cmdsynopsis>
               <command>file</command>
               <arg choice="plain">remove</arg>
               <arg>file-name</arg>
               </cmdsynopsis></term>
            <listitem>
               <para>
                  Remove a file. 
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term><cmdsynopsis>
               <command>file</command>
               <arg choice="plain">removeDir</arg>
               <arg>dir-name</arg>
               </cmdsynopsis></term>
            <listitem>
               <para>
                  Remove a directory. 
               </para>
            </listitem>
         </varlistentry>
      </variablelist>
   </refsect1>

   <refsect1><title>Example</title>
   <para>
   An example how to directly read in zip archives.
   <programlisting>
set txtFp [gnocl::file create /tmp/VFS_test.txt -force 1]
$txtFp write "Gnocl with Gnome VFS"
$txtFp close
exec zip -j /tmp/qqq.zip /tmp/VFS_test.txt
set zipFp [gnocl::file open /tmp/qqq.zip#zip:VFS_test.txt]
$zipFp read 1024 ll
$zipFp close
puts $ll  ;# will print "Gnocl with Gnome VFS" 
   </programlisting>
   </para>
   </refsect1>
</refentry>

